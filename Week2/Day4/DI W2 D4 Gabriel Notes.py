# -*- coding: utf-8 -*-
"""File.I\O,Json,API.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DAGmy_IHa-IaZXGr7cx1sL1bjPJlb2xA
"""

f = open('hello.txt', 'w+')
secret_data = f.read()
# secret_data is a string
print(secret_data)

f.write('This is a new line')
f.close()
f = open('hello.txt', 'r')
secret_data = f.read()
# secret_data is a string
print(secret_data)
f.close()

f=open('hello.txt', 'a')
f.write('This is a new line')
f.close()
f = open('hello.txt', 'r')
secret_data = f.read()
# secret_data is a string
print(secret_data)
f.close()

try:
  f=open('hel.txt', 'r')
  secret_data = f.read()
  # secret_data is a string
  print(secret_data)
except FileNotFoundError as e:
  print("The filer was not found")
except Exception as e:
  print(f"An error occured {e}")
finally:
  try:
    f.close()
    print("file closed")
  except NameError as e:
    print("File was never opened")

f = open('output.txt', 'w')
for i in range(10):
    f.write("this is line: %i\n"%i)
f.close()

# Same as
try:
  with open('output.txt', 'w') as f:
      for i in range(10):
        f.write("this is line: %i\n"%i)
except FileNotFoundError as e:
  print("The filer was not found")
except Exception as e:
  print(f"An error occured {e}")

for line in open('output.txt'):
    print(line)

f=open('output.txt')
lines = f.readlines()
f.close()

f=open('output.txt', 'a+')
for line in lines:
    f=open('output.txt', 'a+')
    new_line = line.lstrip()+"new line"
    f.write(new_line)
    f.close()
for line in open('output.txt'):
    print(line)
f.close()

fs=open('hello.txt', 'w+')
position = fs.tell()
print(position)
fs.write("Hello worldddddd")

fs.seek(1)
position = fs.tell()
print(position)
content = fs.read()
position = fs.tell()
print(position)
fs.close()
print(content)

import json

my_family = {
    "parents":['Beth', 'Jerry'],
    "children":['Summer', 'Morty']
}

json_file = "my_file.json"

with open(json_file, 'w') as file_obj:
    json.dump(my_family, file_obj)

family = {
    "firstName": "Jane",
    "lastName": "Doe",
    "hobbies": ["running", "sky diving", "singing"],
    "age": 35,
    "children": [
        {
            "firstName": "Alice",
            "age": 6
        },
        {
            "firstName": "Bob",
            "age": 8
        }
    ]
}

family['children'][1]['age']

import json

my_family = {
    "parents" :['Beth', 'Jerry'],
    "children" :['Summer', 'Morty']
}

print(type(my_family))
json_my_family = json.dumps(my_family)
print(type(json_my_family))

import json

my_family = {
    "parents" :['Beth', 'Jerry'],
    "children" :['Summer', 'Morty']
}

json_file = "index.json"

with open(json_file, 'w') as file_obj:
    json = json.dump(my_family, file_obj, indent = 2, sort_keys=True)

import json

my_family = {
    "parents" :['Beth', 'Jerry'],
    "children" :['Summer', 'Morty']
}


json = json.dumps(my_family, indent = 2, sort_keys=True)
json

import json

json_file = 'my_file.json'
with open(json_file, 'r') as file_obj:
    my_family = json.load(file_obj)

print(my_family)

import requests

# Step 3.1: Define the base URL and API key
api_key = "your_api_key_here"  # Replace with your OpenWeatherMap API key
base_url = "http://api.openweathermap.org/data/2.5/weather"

# Step 3.2: Ask the user for the city name
city_name = input("Enter city name: ")

# Step 3.3: Construct the final URL to make the API request
url = f"{base_url}?q={city_name}&appid={api_key}&units=metric"

# Step 3.4: Make the request and get the response
response = requests.get(url)

# Step 3.5: Check if the request was successful (status code 200)
if response.status_code == 200:
    data = response.json()  # Parse the JSON data

    # Step 3.6: Extract the relevant data from the JSON response
    main = data['main']
    weather = data['weather'][0]

    # Step 3.7: Display the information
    print(f"City: {data['name']}")
    print(f"Temperature: {main['temp']}Â°C")
    print(f"Weather: {weather['description'].capitalize()}")
    print(f"Humidity: {main['humidity']}%")
    print(f"Pressure: {main['pressure']} hPa")
else:
    # Step 3.8: Handle the error if the request was not successful
    print("City not found. Please check the city name and try again.")